#!/usr/bin/env node

const alpha = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
const cipher = process.argv[2]

if (!cipher) throw new Error('Must provide cipher')

const substitute = (str, offset, flipped = false) => {
    if (flipped) {
        return str.split('').map(l => !l.match(/[A-Z]/) ? l : alpha[(alpha.length - alpha.indexOf(l) + offset) % (alpha.length)]).join('')
    }
    return str.split('').map(l => !l.match(/[A-Z]/) ? l : alpha[(alpha.indexOf(l) + offset) % (alpha.length)]).join('')
}

console.info('Substitutions')
for (let i = 0 ; i < alpha.length ; i++) {
    console.info(i, substitute(cipher.toUpperCase(), i))
}

console.info('\nFlipped Substitutions')
for (let i = 0 ; i < alpha.length ; i++) {
    console.info(i, substitute(cipher.toUpperCase(), i, true))
}
